#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

#@ d = data.values.domain or assert.fail("missing domain definition")
#@ w = data.values.wildcard_domain or assert.fail("missing wildcard_domain definition")

#@  sa=overlay.subset({"kind": "ServiceAccount"})
#@  cm=overlay.subset({"kind": "ConfigMap"})
#@  svc=overlay.subset({"kind": "Service"})
#@  role=overlay.subset({"kind": "Role"})
#@  rb=overlay.subset({"kind": "RoleBinding"})
#@  job=overlay.subset({"kind": "Job"})
#@  pod=overlay.subset({"kind": "Pod"})
#@  deploy=overlay.subset({"kind": "Deployment"})
#@  secret=overlay.subset({"kind": "Secret"})
#@  ss=overlay.subset({"kind": "StatefulSet"})
#@  apprepo=overlay.subset({"kind": "AppRepository"})

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kubeapps
  namespace: kubeapps
spec:
  rules:
  - host: $DASHBOARD_URL
    http:
      paths:
      - backend:
          serviceName: kubeapps
          servicePort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-cluster-admin
  namespace: kubeapps
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeapps-all-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubeapps-cluster-admin
  namespace: kubeapps

#@ if data.values.kubeapps.namespace != data.values.ingress.namespace:
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.kubeapps.namespace
---
#@ end



#@overlay/match by=overlay.subset({"metadata": {"annotations": { "helm.sh/hook": "pre-install"}}}),expects="1+"
---
metadata:
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/change-group: pre-install

#@overlay/match by=overlay.subset({"metadata": {"annotations": { "helm.sh/hook": "post-install"}}}),expects="1+"
---
metadata:
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/change-group: post-install

#@overlay/match by=overlay.subset({"metadata": {"annotations": { "helm.sh/hook": "post-delete"}}}),expects="1+"
#@overlay/remove
---
#!metadata:
#!  annotations:
#!    #@overlay/match missing_ok=True
#!    kapp.k14s.io/change-group: post-delete

#@overlay/match by=overlay.subset({"metadata": {"annotations": { "helm.sh/hook": "test-success"}}}),expects="1+"
#@overlay/remove
---
#!metadata:
#!  annotations:
#!    #@overlay/match missing_ok=True
#!    kapp.k14s.io/change-group: test-success

#@overlay/match by=overlay.subset({"metadata": {"annotations": { "helm.sh/hook": "post-upgrade"}}}),expects="1+"
#@overlay/remove
---
#!metadata:
#!  annotations:
#!    #@overlay/match missing_ok=True
#!    kapp.k14s.io/change-group: post-upgrade

#@overlay/match by=overlay.or_op(sa,secret,role,rb,pod,job,apprepo,cm,svc,deploy,ss), expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.kubeapps.namespace

#@overlay/match by=overlay.subset({"kind":"Ingress", "metadata": {"name": "kubeapps"}})
---
spec:
  rules:
  #@overlay/match by=overlay.index(0)
  - host: #@ "kubeapps.{}".format(d)
  #@overlay/match missing_ok=True
  tls:
  - hosts:
    - #@ "kubeapps.{}".format(d)
    secretName: wildcard
